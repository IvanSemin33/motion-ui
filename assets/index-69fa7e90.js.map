{"version":3,"file":"index-69fa7e90.js","sources":["../../src/components/IconButton/index.tsx"],"sourcesContent":["import { IconType } from \"react-icons\";\nimport ButtonBase, {\n  EButtonBaseColors,\n  EButtonBaseSizes,\n  EButtonBaseTypes,\n  EButtonBaseVariants,\n  IButtonBaseOwnProps,\n  TButtonBaseRef,\n} from \"../../core/ButtonBase\";\nimport wrapper from \"../../utils/wrapper\";\n\nexport const EIconButtonColors = EButtonBaseColors;\nexport type EIconButtonColors = EButtonBaseColors;\n\nexport const EIconButtonVariants = EButtonBaseVariants;\nexport type EIconButtonVariants = EButtonBaseVariants;\n\nexport const EIconButtonSizes = EButtonBaseSizes;\nexport type EIconButtonSizes = EButtonBaseSizes;\n\nexport interface IIconButtonOwnProps\n  extends Omit<\n    IButtonBaseOwnProps,\n    \"Icon, buttonType, IconEnd, IconStart, children\"\n  > {\n  Icon: IconType;\n}\n\nexport type TIconButtonRef = TButtonBaseRef;\n\nconst IconButton = wrapper<TIconButtonRef, IIconButtonOwnProps>(\n  (props, ref) => {\n    return (\n      <ButtonBase ref={ref} {...props} buttonType={EButtonBaseTypes.ICON} />\n    );\n  }\n);\n\nIconButton.defaultProps = {\n  color: EIconButtonColors.PRIMARY,\n  disabled: false,\n  size: EIconButtonSizes.MEDIUM,\n  variant: EIconButtonVariants.CONTAINED,\n};\n\nexport interface IIconButtonProps\n  extends React.ComponentProps<typeof IconButton> {}\n\nexport default IconButton;\n"],"names":["EIconButtonColors","EButtonBaseColors","EIconButtonVariants","EButtonBaseVariants","EIconButtonSizes","EButtonBaseSizes","IconButton","wrapper","props","ref","jsx","ButtonBase","EButtonBaseTypes","IconButton$1"],"mappings":"qHAWO,MAAAA,EAAAC,EAGAC,EAAAC,EAGAC,EAAAC,EAaPC,EAAAC,EAAmB,CAAAC,EAAAC,IAEfC,EAAA,IAAAC,EAAA,CAAA,IAAAF,EAAA,GAAAD,EAAA,WAAAI,EAAA,IAAA,CAAA,CAIJ,EAEAN,EAAA,aAAA,CAA0B,MAAAN,EAAA,QACC,SAAA,GACf,KAAAI,EAAA,OACa,QAAAF,EAAA,SAEzB,EAKA,MAAAW,EAAAP;;;;;;;;;;"}