{"version":3,"file":"index.stories-5973d333.js","sources":["../../src/components/Switch/index.tsx"],"sourcesContent":["import classNames from \"classnames\";\n\nimport styles from \"./index.module.scss\";\n\nimport wrapper from \"../../utils/wrapper\";\nimport { IconType } from \"react-icons\";\n\nexport enum ESwitchSize {\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\n\nexport interface ISwitchOwnProps\n  extends Omit<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    \"size\" | \"onChange\"\n  > {\n  BackIcon?: IconType;\n  checked?: boolean;\n  CheckedBackIcon?: IconType;\n  CheckedIcon?: IconType;\n  disabled?: boolean;\n  Icon?: IconType;\n  isFetching?: boolean;\n  onChange?: (checked: boolean) => void;\n  size?: ESwitchSize;\n}\n\nexport type TSwitchRef = HTMLDivElement;\n\nconst Switch = wrapper<TSwitchRef, ISwitchOwnProps>(\n  (\n    {\n      BackIcon,\n      checked,\n      CheckedBackIcon,\n      CheckedIcon,\n      disabled,\n      Icon,\n      isFetching,\n      onChange,\n      size,\n      className,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const renderIcon = () => {\n      if (checked) {\n        if (CheckedIcon) {\n          return <CheckedIcon className={styles.icon} />;\n        }\n      } else if (Icon) {\n        return <Icon className={styles.icon} />;\n      }\n      return null;\n    };\n\n    const renderBackIcon = () => {\n      if (checked) {\n        if (CheckedBackIcon) {\n          return <CheckedBackIcon className={styles.backIcon} />;\n        }\n      } else if (BackIcon) {\n        return <BackIcon className={styles.backIcon} />;\n      }\n      return null;\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={classNames(\n          styles.container,\n          size && styles[size],\n          disabled && styles.disabled,\n          isFetching && styles.isFetching,\n          checked && styles.checked,\n          className\n        )}\n      >\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          disabled={disabled}\n          onChange={(e) => onChange?.(e.target.checked)}\n          className={styles.input}\n          {...inputProps}\n        />\n        <div className={styles.back}>{renderBackIcon()}</div>\n        <span className={styles.handle}>{renderIcon()}</span>\n      </div>\n    );\n  }\n);\n\nSwitch.defaultProps = {\n  checked: false,\n  disabled: false,\n  isFetching: false,\n  size: ESwitchSize.MEDIUM,\n};\n\nexport interface ISwitchProps extends React.ComponentProps<typeof Switch> {}\n\nexport default Switch;\n"],"names":["ESwitchSize","ESwitchSize2","Switch","wrapper","BackIcon","checked","CheckedBackIcon","CheckedIcon","disabled","Icon","isFetching","onChange","size","className","inputProps","ref","renderIcon","jsx","styles","renderBackIcon","jsxs","classNames","e","Switch$1"],"mappings":"wyBAOO,IAAAA,GAAAC,IACLA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QAHUA,IAAAD,GAAA,CAAA,CAAA,EAwBZ,MAAAE,EAAAC,EAAe,CAAA,CAEX,SAAAC,EACE,QAAAC,EACA,gBAAAC,EACA,YAAAC,EACA,SAAAC,EACA,KAAAC,EACA,WAAAC,EACA,SAAAC,EACA,KAAAC,EACA,UAAAC,EACA,GAAAC,CACG,EAAAC,IAAA,CAIL,MAAAC,EAAA,IAAA,CACE,GAAAX,GACE,GAAAE,EACE,OAAAU,EAAAA,IAAAV,EAAA,CAAA,UAAAW,EAAA,IAAA,CAAA,UACFT,EAEA,OAAAQ,EAAAA,IAAAR,EAAA,CAAA,UAAAS,EAAA,IAAA,CAAA,EAEF,OAAA,IAAO,EAGTC,EAAA,IAAA,CACE,GAAAd,GACE,GAAAC,EACE,OAAAW,EAAAA,IAAAX,EAAA,CAAA,UAAAY,EAAA,QAAA,CAAA,UACFd,EAEA,OAAAa,EAAAA,IAAAb,EAAA,CAAA,UAAAc,EAAA,QAAA,CAAA,EAEF,OAAA,IAAO,EAGT,OAAAE,EAAA,KACE,MAAC,CAAA,IAAAL,EACC,UAAAM,EACWH,EAAA,UACFN,GAAAM,EAAAN,CAAA,EACYJ,GAAAU,EAAA,SACAR,GAAAQ,EAAA,WACEb,GAAAa,EAAA,QACHL,CAClB,EACF,SAAA,CAEAI,EAAA,IAAA,QAAC,CAAA,KAAA,WACM,QAAAZ,EACL,SAAAG,EACA,SAAAc,GAAAX,GAAA,YAAAA,EAAAW,EAAA,OAAA,SAC4C,UAAAJ,EAAA,MAC1B,GAAAJ,CACd,CAAA,EACNG,MAAA,MAAA,CAAA,UAAAC,EAAA,KAAA,SAAAC,EAAA,EAAA,EAC+CF,MAAA,OAAA,CAAA,UAAAC,EAAA,OAAA,SAAAF,EAAA,EAAA,CACD,CAAA,CAAA,CAChD,CAGN,EAEAd,EAAA,aAAA,CAAsB,QAAA,GACX,SAAA,GACC,WAAA,GACE,KAAA,QAEd,EAIA,MAAAqB,EAAArB;;;;;;;;;;;;;;;;;;"}