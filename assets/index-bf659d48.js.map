{"version":3,"file":"index-bf659d48.js","sources":["../../src/components/Checkbox/index.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef } from \"react\";\n\nimport classNames from \"classnames\";\n\nimport { GoCheck as CheckIcon, GoDash as RemoveIcon } from \"react-icons/go\";\n\nimport styles from \"./index.module.scss\";\n\nimport wrapper from \"../../utils/wrapper\";\n\nexport enum ECheckboxVariants {\n  FILLED = \"filled\",\n  OUTLINED = \"outlined\",\n}\n\nexport enum ECheckboxSizes {\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\nexport interface ICheckboxOwnProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\"> {\n  checked?: boolean;\n  disabled?: boolean;\n  indeterminate?: boolean;\n  label?: string;\n  size?: ECheckboxSizes;\n  variant?: ECheckboxVariants;\n  isFetching?: boolean;\n  onClick?: React.MouseEventHandler<HTMLInputElement>;\n}\n\nexport type TCheckboxRef = HTMLLabelElement;\n\nconst Checkbox = wrapper<TCheckboxRef, ICheckboxOwnProps>(\n  (\n    {\n      variant,\n      checked,\n      indeterminate,\n      disabled,\n      size,\n      label,\n      isFetching,\n      className,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n      if (inputRef.current) {\n        if (checked) {\n          inputRef.current.checked = true;\n          inputRef.current.indeterminate = false;\n        } else if (!checked && indeterminate) {\n          inputRef.current.checked = false;\n          inputRef.current.indeterminate = true;\n        } else {\n          inputRef.current.checked = false;\n          inputRef.current.indeterminate = false;\n        }\n      }\n    }, [checked, indeterminate]);\n\n    const isTerminated = useMemo(\n      () => !checked && indeterminate,\n      [checked, indeterminate]\n    );\n\n    return (\n      <label\n        ref={ref}\n        className={classNames(\n          styles.container,\n          size && styles[size],\n          variant && styles[variant],\n          disabled && styles.disabled,\n          checked && styles.checked,\n          isTerminated && styles.indeterminate,\n          isFetching && styles.isFetching,\n          className\n        )}\n      >\n        <input\n          ref={inputRef}\n          className={styles.input}\n          type=\"checkbox\"\n          disabled={disabled}\n          {...inputProps}\n        />\n        <span className={styles.checkmark}>\n          {checked ? <CheckIcon /> : isTerminated ? <RemoveIcon /> : null}\n        </span>\n        {label && <div className={styles.label}>{label}</div>}\n      </label>\n    );\n  }\n);\n\nCheckbox.defaultProps = {\n  checked: false,\n  disabled: false,\n  indeterminate: false,\n  size: ECheckboxSizes.MEDIUM,\n  variant: ECheckboxVariants.FILLED,\n};\n\nexport interface ICheckboxProps extends React.ComponentProps<typeof Checkbox> {}\n\nexport default Checkbox;\n"],"names":["ECheckboxVariants","ECheckboxVariants2","ECheckboxSizes","ECheckboxSizes2","Checkbox","wrapper","variant","checked","indeterminate","disabled","size","label","isFetching","className","inputProps","ref","inputRef","useRef","useEffect","isTerminated","useMemo","jsxs","classNames","styles","jsx","CheckIcon","RemoveIcon","Checkbox$1"],"mappings":"yrBAUO,IAAAA,GAAAC,IACLA,EAAA,OAAA,SACAA,EAAA,SAAA,WAFUA,IAAAD,GAAA,CAAA,CAAA,EAKLE,GAAAC,IACLA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QAHUA,IAAAD,GAAA,CAAA,CAAA,EAmBZ,MAAAE,EAAAC,EAAiB,CAAA,CAEb,QAAAC,EACE,QAAAC,EACA,cAAAC,EACA,SAAAC,EACA,KAAAC,EACA,MAAAC,EACA,WAAAC,EACA,UAAAC,EACA,GAAAC,CACG,EAAAC,IAAA,CAIL,MAAAC,EAAAC,SAAA,IAAA,EAEAC,EAAAA,UAAA,IAAA,CACEF,EAAA,UACET,GACES,EAAA,QAAA,QAAA,GACAA,EAAA,QAAA,cAAA,IAAiC,CAAAT,GAAAC,GAEjCQ,EAAA,QAAA,QAAA,GACAA,EAAA,QAAA,cAAA,KAEAA,EAAA,QAAA,QAAA,GACAA,EAAA,QAAA,cAAA,IAEJ,EAAA,CAAAT,EAAAC,CAAA,CAAA,EAGF,MAAAW,EAAAC,EAAA,QAAqB,IAAA,CAAAb,GAAAC,EACD,CAAAD,EAAAC,CAAA,CACK,EAGzB,OAAAa,EAAA,KACE,QAAC,CAAA,IAAAN,EACC,UAAAO,EACWC,EAAA,UACFb,GAAAa,EAAAb,CAAA,EACYJ,GAAAiB,EAAAjB,CAAA,EACMG,GAAAc,EAAA,SACNhB,GAAAgB,EAAA,QACDJ,GAAAI,EAAA,cACKX,GAAAW,EAAA,WACFV,CACrB,EACF,SAAA,CAEAW,EAAA,IAAA,QAAC,CAAA,IAAAR,EACM,UAAAO,EAAA,MACa,KAAA,WACb,SAAAd,EACL,GAAAK,CACI,CAAA,EACNU,EAAA,IAAA,OAAA,CAAA,UAAAD,EAAA,UAAA,SAAAhB,EAAAiB,EAAAA,IAAAC,EAAA,CAAA,CAAA,EAAAN,EAAAK,EAAAA,IAAAE,EAAA,CAAA,CAAA,EAAA,KAAA,EAGAf,GAAAa,EAAAA,IAAA,MAAA,CAAA,UAAAD,EAAA,MAAA,SAAAZ,EAAA,CAC+C,CAAA,CAAA,CACjD,CAGN,EAEAP,EAAA,aAAA,CAAwB,QAAA,GACb,SAAA,GACC,cAAA,GACK,KAAA,SACT,QAAA,QAER,EAIA,MAAAuB,EAAAvB"}