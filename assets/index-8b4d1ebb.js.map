{"version":3,"file":"index-8b4d1ebb.js","sources":["../../src/components/Chip/index.tsx"],"sourcesContent":["import classNames from \"classnames\";\n\nimport { GoX as CloseIcon } from \"react-icons/go\";\n\nimport styles from \"./index.module.scss\";\n\nimport wrapper from \"../../utils/wrapper\";\nimport { IconType } from \"react-icons\";\n\nexport enum EChipColors {\n  PRIMARY = \"primary\",\n  SECONDARY = \"secondary\",\n  DARK = \"dark\",\n}\n\nexport enum EChipVariants {\n  FILLED = \"filled\",\n  OUTLINED = \"outlined\",\n}\n\nexport enum EChipSizes {\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\n\ninterface IChipOwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  color?: EChipColors;\n  disabled?: boolean;\n  Icon?: IconType;\n  label: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onDelete?: (e: React.MouseEvent<SVGElement, MouseEvent>) => void;\n  size?: EChipSizes;\n  variant?: EChipVariants;\n  isFetching?: boolean;\n  className?: string;\n}\n\nexport type TChipRef = HTMLDivElement;\n\nconst defaultProps = {\n  color: EChipColors.PRIMARY,\n  disabled: false,\n  size: EChipSizes.MEDIUM,\n  variant: EChipVariants.FILLED,\n};\n\nconst Chip = wrapper<TChipRef, IChipOwnProps>(\n  (\n    {\n      color,\n      disabled,\n      Icon,\n      label,\n      onClick,\n      onDelete,\n      size,\n      variant,\n      isFetching,\n      className,\n      ...containerProps\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        key=\"chip\"\n        className={classNames(\n          styles.container,\n          color && styles[color],\n          size && styles[size],\n          variant && styles[variant],\n          disabled && styles.disabled,\n          onClick && styles.clickable,\n          onDelete && styles.deletable,\n          isFetching && styles.isFetching,\n          className\n        )}\n        onClick={onClick}\n        {...containerProps}\n      >\n        {Icon && <Icon className={styles.icon} />}\n        {label}\n        {onDelete && (\n          <CloseIcon className={styles.deleteIcon} onClick={onDelete} />\n        )}\n      </div>\n    );\n  }\n);\n\nChip.defaultProps = defaultProps;\n\nexport interface IChipProps extends React.ComponentProps<typeof Chip> {}\n\nexport default Chip;\n"],"names":["EChipColors","EChipColors2","EChipVariants","EChipVariants2","EChipSizes","EChipSizes2","defaultProps","Chip","wrapper","color","disabled","Icon","label","onClick","onDelete","size","variant","isFetching","className","containerProps","ref","jsxs","classNames","styles","jsx","CloseIcon","Chip$1"],"mappings":"orBASO,IAAAA,GAAAC,IACLA,EAAA,QAAA,UACAA,EAAA,UAAA,YACAA,EAAA,KAAA,OAHUA,IAAAD,GAAA,CAAA,CAAA,EAMLE,GAAAC,IACLA,EAAA,OAAA,SACAA,EAAA,SAAA,WAFUA,IAAAD,GAAA,CAAA,CAAA,EAKLE,GAAAC,IACLA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QAHUA,IAAAD,GAAA,CAAA,CAAA,EAqBZ,MAAAE,EAAA,CAAqB,MAAA,UACZ,SAAA,GACG,KAAA,SACJ,QAAA,QAER,EAEAC,EAAAC,EAAa,CAAA,CAET,MAAAC,EACE,SAAAC,EACA,KAAAC,EACA,MAAAC,EACA,QAAAC,EACA,SAAAC,EACA,KAAAC,EACA,QAAAC,EACA,WAAAC,EACA,UAAAC,EACA,GAAAC,CACG,EAAAC,IAILC,EAAA,KACE,MAAC,CAAA,IAAAD,EACC,UAAAE,EAEWC,EAAA,UACFd,GAAAc,EAAAd,CAAA,EACcM,GAAAQ,EAAAR,CAAA,EACFC,GAAAO,EAAAP,CAAA,EACMN,GAAAa,EAAA,SACNV,GAAAU,EAAA,UACDT,GAAAS,EAAA,UACCN,GAAAM,EAAA,WACEL,CACrB,EACF,QAAAL,EACA,GAAAM,EACI,SAAA,CAEHR,GAAAa,EAAA,IAAAb,EAAA,CAAA,UAAAY,EAAA,KAAA,EAAsCX,EACtCE,GAAAU,EAAAA,IAAAC,EAAA,CAAA,UAAAF,EAAA,WAAA,QAAAT,EAAA,CAE6D,CAAA,EAAA,MAlB1D,CAuBZ,EAEAP,EAAA,aAAAD,EAIA,MAAAoB,EAAAnB"}