{"version":3,"file":"index.stories-f131a86e.js","sources":["../../src/components/DatePicker/index.tsx"],"sourcesContent":["import { useCallback, useMemo, useState } from 'react'\n\nimport { format, Locale } from 'date-fns'\nimport { enGB } from 'date-fns/locale'\nimport { Calendar, CalendarProps } from 'react-date-range'\n\nimport DatePickerBase, {\n  EDatePickerBaseLabelPlacements,\n  EDatePickerBaseTypes,\n  EDatePickerBaseVariants,\n  IDatePickerBaseProps,\n} from '../../core/DatePickerBase'\nimport wrapper from '../../utils/wrapper'\n\nexport const EDatePickerLabelPlacements = EDatePickerBaseLabelPlacements\nexport type EDatePickerLabelPlacements = EDatePickerBaseLabelPlacements\n\nexport const EDatePickerVariants = EDatePickerBaseVariants\nexport type EDatePickerVariants = EDatePickerBaseVariants\n\ninterface IDatePickerOwnProps\n  extends Omit<\n    IDatePickerBaseProps,\n    | 'onChange'\n    | 'value'\n    | 'type'\n    | 'calendar'\n    | 'setStartDateInputValue'\n    | 'setEndDateInputValue'\n    | 'startDateInputValue'\n    | 'endDateInputValue'\n  > {\n  onChange: (value: Date) => void\n  value: Date\n  labelPlacement?: EDatePickerLabelPlacements\n  variant?: EDatePickerVariants\n  locale?: Locale\n}\n\nexport type TDatePickerRef = HTMLDivElement\n\nconst DatePicker = wrapper<TDatePickerRef, IDatePickerOwnProps>(\n  ({ value, locale, onChange, ...calendarProps }) => {\n    const [startDateInputValue, setStartDateInputValue] = useState<string>(\n      format(value, 'dd.MM.yyyy')\n    )\n\n    const onChangeCalendar = useCallback(\n      (date: Date) => {\n        onChange(date)\n        setStartDateInputValue(format(date, 'dd.MM.yyyy'))\n      },\n      [onChange, setStartDateInputValue]\n    )\n\n    const reactDateRangeProps: CalendarProps = useMemo(() => {\n      return {\n        showDateDisplay: false,\n        weekdayDisplayFormat: 'EEEEEE',\n        locale: locale,\n        onChange: (item) => onChangeCalendar(item),\n        date: value,\n      }\n    }, [value, locale, onChangeCalendar])\n\n    return (\n      <DatePickerBase\n        {...calendarProps}\n        type={EDatePickerBaseTypes.SINGLE}\n        calendar={<Calendar {...reactDateRangeProps} />}\n        setStartDateInputValue={setStartDateInputValue}\n        startDateInputValue={startDateInputValue}\n        onChange={(value) => onChange(value as Date)}\n        value={value}\n      />\n    )\n  }\n)\n\nDatePicker.defaultProps = {\n  locale: enGB,\n}\n\nexport interface IDatePickerProps extends React.ComponentProps<typeof DatePicker> {}\n\nexport default DatePicker\n"],"names":["EDatePickerLabelPlacements","EDatePickerBaseLabelPlacements","EDatePickerVariants","EDatePickerBaseVariants","DatePicker","wrapper","value","locale","onChange","calendarProps","startDateInputValue","setStartDateInputValue","useState","format","onChangeCalendar","useCallback","date","reactDateRangeProps","useMemo","item","jsx","DatePickerBase","EDatePickerBaseTypes","Calendar","value2","enGB"],"mappings":"giBAcO,MAAAA,EAAAC,EAGAC,EAAAC,EAwBPC,EAAAC,EAAmB,CAAA,CAAA,MAAAC,EAAA,OAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,IAAA,CAEf,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAsDC,EAAAP,EAAA,YAAA,CAC1B,EAG5BQ,EAAAC,EAAA,YAAyBC,GAAA,CAErBR,EAAAQ,CAAA,EACAL,EAAAE,EAAAG,EAAA,YAAA,CAAA,CAAiD,EACnD,CAAAR,EAAAG,CAAA,CACiC,EAGnCM,EAAAC,EAAAA,QAAA,KACE,CAAO,gBAAA,GACY,qBAAA,SACK,OAAAX,EACtB,SAAAY,GAAAL,EAAAK,CAAA,EACyC,KAAAb,CACnC,GACR,CAAAA,EAAAC,EAAAO,CAAA,CAAA,EAGF,OAAAM,EAAA,IACEC,GAAC,CAAA,GAAAZ,EACK,KAAAa,GAAA,OACuB,SAAAF,EAAAA,IAAAG,GAAAA,SAAA,CAAA,GAAAN,CAAA,CAAA,EACkB,uBAAAN,EAC7C,oBAAAD,EACA,SAAAc,GAAAhB,EAAAgB,CAAA,EAC2C,MAAAlB,CAC3C,CAAA,CACF,CAGN,EAEAF,EAAA,aAAA,CAA0B,OAAAqB,CAE1B;;;;;;;;;;;;;;;;;;;;;"}