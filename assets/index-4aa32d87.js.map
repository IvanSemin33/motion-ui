{"version":3,"file":"index-4aa32d87.js","sources":["../../src/components/Radio/index.tsx"],"sourcesContent":["import classNames from \"classnames\";\n\nimport {\n  GoCheck as CheckIcon,\n  GoDotFill as EllipseIcon,\n  GoSquareFill as RectangleIcon,\n} from \"react-icons/go\";\n\nimport styles from \"./index.module.scss\";\n\nimport wrapper from \"../../utils/wrapper\";\n\nexport enum ERadioVariants {\n  STANDARD = \"standard\",\n  FILLED = \"filled\",\n  OUTLINED = \"outlined\",\n}\n\nexport enum ERadioSizes {\n  SMALL = \"small\",\n  MEDIUM = \"medium\",\n  LARGE = \"large\",\n}\n\nexport enum ERadioShapes {\n  CIRCLE = \"circle\",\n  SQUARE = \"square\",\n}\n\nexport interface IRadioOwnProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\"> {\n  checked?: boolean;\n  disabled?: boolean;\n  isFetching?: boolean;\n  label?: string;\n  shape?: ERadioShapes;\n  size?: ERadioSizes;\n  variant?: ERadioVariants;\n}\n\nexport type TRadioRef = HTMLLabelElement;\n\nconst Radio = wrapper<TRadioRef, IRadioOwnProps>(\n  (\n    {\n      shape,\n      isFetching,\n      variant,\n      checked,\n      disabled,\n      size,\n      label,\n      className,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const renderIcon = () => {\n      if (checked) {\n        if (variant === \"standard\") {\n          return shape === \"square\" ? <RectangleIcon /> : <EllipseIcon />;\n        } else {\n          return <CheckIcon />;\n        }\n      }\n      return null;\n    };\n\n    return (\n      <label\n        ref={ref}\n        className={classNames(\n          styles.container,\n          size && styles[size],\n          variant && styles[variant],\n          shape && styles[shape],\n          disabled && styles.disabled,\n          checked && styles.checked,\n          isFetching && styles.isFetching,\n          className\n        )}\n      >\n        <input\n          className={styles.input}\n          type=\"radio\"\n          disabled={disabled}\n          checked={checked}\n          {...inputProps}\n        />\n        <span className={styles.checkmark}>{renderIcon()}</span>\n        {label && <div className={styles.label}>{label}</div>}\n      </label>\n    );\n  }\n);\n\nRadio.defaultProps = {\n  checked: false,\n  disabled: false,\n  shape: ERadioShapes.CIRCLE,\n  size: ERadioSizes.MEDIUM,\n  variant: ERadioVariants.FILLED,\n};\n\nexport interface IRadioProps extends React.ComponentProps<typeof Radio> {}\n\nexport default Radio;\n"],"names":["ERadioVariants","ERadioVariants2","ERadioSizes","ERadioSizes2","ERadioShapes","ERadioShapes2","Radio","wrapper","shape","isFetching","variant","checked","disabled","size","label","className","inputProps","ref","renderIcon","jsx","RectangleIcon","EllipseIcon","CheckIcon","jsxs","classNames","styles","Radio$1"],"mappings":"4sBAYO,IAAAA,GAAAC,IACLA,EAAA,SAAA,WACAA,EAAA,OAAA,SACAA,EAAA,SAAA,WAHUA,IAAAD,GAAA,CAAA,CAAA,EAMLE,GAAAC,IACLA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QAHUA,IAAAD,GAAA,CAAA,CAAA,EAMLE,GAAAC,IACLA,EAAA,OAAA,SACAA,EAAA,OAAA,SAFUA,IAAAD,GAAA,CAAA,CAAA,EAkBZ,MAAAE,EAAAC,EAAc,CAAA,CAEV,MAAAC,EACE,WAAAC,EACA,QAAAC,EACA,QAAAC,EACA,SAAAC,EACA,KAAAC,EACA,MAAAC,EACA,UAAAC,EACA,GAAAC,CACG,EAAAC,IAAA,CAIL,MAAAC,EAAA,IACEP,EACED,IAAA,WACEF,IAAA,SAAAW,EAAAA,IAAAC,EAAA,CAAA,CAAA,EAAAD,EAAA,IAAAE,EAAA,CAAA,CAAA,EAEAF,EAAA,IAAAG,EAAA,CAAA,CAAA,EAGJ,KAGF,OAAAC,EAAA,KACE,QAAC,CAAA,IAAAN,EACC,UAAAO,EACWC,EAAA,UACFZ,GAAAY,EAAAZ,CAAA,EACYH,GAAAe,EAAAf,CAAA,EACMF,GAAAiB,EAAAjB,CAAA,EACJI,GAAAa,EAAA,SACFd,GAAAc,EAAA,QACDhB,GAAAgB,EAAA,WACGV,CACrB,EACF,SAAA,CAEAI,EAAA,IAAA,QAAC,CAAA,UAAAM,EAAA,MACmB,KAAA,QACb,SAAAb,EACL,QAAAD,EACA,GAAAK,CACI,CAAA,EACNG,MAAA,OAAA,CAAA,UAAAM,EAAA,UAAA,SAAAP,EAAA,EAAA,EACiDJ,GAAAK,EAAAA,IAAA,MAAA,CAAA,UAAAM,EAAA,MAAA,SAAAX,EAAA,CACF,CAAA,CAAA,CACjD,CAGN,EAEAR,EAAA,aAAA,CAAqB,QAAA,GACV,SAAA,GACC,MAAA,SACH,KAAA,SACD,QAAA,QAER,EAIA,MAAAoB,EAAApB"}