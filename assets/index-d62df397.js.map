{"version":3,"file":"index-d62df397.js","sources":["../../src/components/Input/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport classNames from \"classnames\";\n\nimport styles from \"./index.module.scss\";\n\nimport InputBase, {\n  EInputBaseColors,\n  EInputBaseVariants,\n} from \"../../core/InputBase\";\nimport wrapper from \"../../utils/wrapper\";\nimport { IconType } from \"react-icons\";\n\nexport const EInputColors = EInputBaseColors;\nexport type EInputColors = EInputBaseColors;\n\nexport const EInputVariants = EInputBaseVariants;\nexport type EInputVariants = EInputBaseVariants;\n\nexport interface IInputOwnProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"color\"> {\n  className?: string;\n  color?: EInputColors;\n  disabled?: boolean;\n  helperText?: string;\n  IconEnd?: IconType;\n  IconStart?: IconType;\n  isFetching?: boolean;\n  label?: string;\n  variant?: EInputVariants;\n}\n\nexport type TInputRef = HTMLDivElement;\n\nconst Input = wrapper<TInputRef, IInputOwnProps>(\n  (\n    {\n      IconStart,\n      IconEnd,\n      className,\n      variant,\n      disabled,\n      helperText,\n      label,\n      color,\n      isFetching,\n      onFocus,\n      onBlur,\n      ...inputProps\n    },\n    ref\n  ) => {\n    const [isFocused, setIsFocused] = useState<boolean>(false);\n\n    return (\n      <InputBase\n        ref={ref}\n        IconStart={IconStart}\n        IconEnd={IconEnd}\n        variant={variant}\n        disabled={disabled}\n        helperText={helperText}\n        label={label}\n        color={color}\n        isFetching={isFetching}\n        isFocused={isFocused}\n        className={className}\n      >\n        <input\n          {...inputProps}\n          className={classNames(styles.input, disabled && styles.disabled)}\n          disabled={disabled}\n          onFocus={(e) => {\n            onFocus && onFocus(e);\n            setIsFocused(true);\n          }}\n          onBlur={(e) => {\n            onBlur && onBlur(e);\n            setIsFocused(false);\n          }}\n        />\n      </InputBase>\n    );\n  }\n);\n\nInput.defaultProps = {\n  color: EInputColors.PRIMARY,\n  disabled: false,\n  variant: EInputVariants.FILLED,\n};\n\nexport type IInputProps = React.ComponentProps<typeof Input>;\n\nexport default Input;\n"],"names":["EInputColors","EInputBaseColors","EInputVariants","EInputBaseVariants","Input","wrapper","IconStart","IconEnd","className","variant","disabled","helperText","label","color","isFetching","onFocus","onBlur","inputProps","ref","isFocused","setIsFocused","useState","jsx","InputBase","classNames","styles","e","Input$1"],"mappings":"0UAaOA,EAAAC,EAGAC,EAAAC,EAkBPC,EAAAC,EAAc,CAAA,CAEV,UAAAC,EACE,QAAAC,EACA,UAAAC,EACA,QAAAC,EACA,SAAAC,EACA,WAAAC,EACA,MAAAC,EACA,MAAAC,EACA,WAAAC,EACA,QAAAC,EACA,OAAAC,EACA,GAAAC,CACG,EAAAC,IAAA,CAIL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEA,OAAAC,EAAA,IACEC,EAAC,CAAA,IAAAL,EACC,UAAAZ,EACA,QAAAC,EACA,QAAAE,EACA,SAAAC,EACA,WAAAC,EACA,MAAAC,EACA,MAAAC,EACA,WAAAC,EACA,UAAAK,EACA,UAAAX,EACA,SAAAc,EAAA,IAEA,QAAC,CAAA,GAAAL,EACK,UAAAO,EAAAC,EAAA,MAAAf,GAAAe,EAAA,QAAA,EAC2D,SAAAf,EAC/D,QAAAgB,GAAA,CAEEX,GAAAA,EAAAW,CAAA,EACAN,EAAA,EAAA,CAAiB,EACnB,OAAAM,GAAA,CAEEV,GAAAA,EAAAU,CAAA,EACAN,EAAA,EAAA,CAAkB,CACpB,CAAA,CACF,CAAA,CACF,CAGN,EAEAhB,EAAA,aAAA,CAAqB,MAAAJ,EAAA,QACC,SAAA,GACV,QAAAE,EAAA,MAEZ,EAIA,MAAAyB,EAAAvB"}